<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ebiten Blog</title>
  <id>https://ebiten.org/blog/</id>
  <link rel="self" href="https://ebiten.org/blog/feed.xml"></link>
  <updated>2020-10-28T00:00:00+09:00</updated>
  <author>
    <name>Hajime Hoshi</name>
    <uri>https://star.one</uri>
    <email>hajimehoshi@gmail.com</email>
  </author>
  <entry>
    <title>v2.0.0 is released</title>
    <id>https://ebiten.org/blog/v2.0.0.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v2.0.0.html"></link>
    <published>2020-10-28T00:00:00+09:00</published>
    <updated>2020-10-28T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1 lang=&#34;en&#34;&gt;v2.0.0 is released&lt;/h1&gt;&#xA;&lt;h1 lang=&#34;ja&#34;&gt;v2.0.0 がリリースされました&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-10-28&lt;/span&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;We are very happy to announce the release of v2.0.0 (&lt;a href=&#34;/documents/2.0.html&#34;&gt;Release Note&lt;/a&gt;).&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;v2.0.0 がリリースされました! 詳しくは&lt;a href=&#34;/documents/2.0.html&#34;&gt;リリースノート&lt;/a&gt;を参照してください。&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;I appreciate all the contributors and &lt;a href=&#34;https://github.com/sponsors/hajimehoshi&#34;&gt;all the sponsors&lt;/a&gt;. Thank you very much!&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;すべてのコントリビューターと&lt;a href=&#34;https://github.com/sponsors/hajimehoshi&#34;&gt;スポンサーの皆様&lt;/a&gt;に感謝いたします。どうもありがとうございます!&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;v2.0 doesn&#39;t have any new features. The features are same as v1.12. As there are breaking changes in the API, please refer &lt;a href=&#34;/documents/to_v2.html&#34;&gt;Ebiten 2.0 migration guide&lt;/a&gt; for the details.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;v2.0 には新機能が一切ありません。機能的には v1.12 と同等です。 API の破壊的変更がありますので、詳しくは「&lt;a href=&#34;/documents/to_v2.html&#34;&gt;Ebiten 2.0 移行ガイド&lt;/a&gt;」を参照してください。&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;The master branch has already been v2.1. Only bug fixes will be merged to v2.0 and v1.12. We plan to release v2.1.0 in March 2021. After releasing v2.1.0, v1.12 will no longer be maintained.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;master ブランチはすでに v2.1 となっています。 v2.0 と v1.12 は今後バグ修正のみが入ります。 v2.1.0 のリリースは 2021 年 3 月頃の予定です。 v2.1.0 のリリース後、 v1.12 はメンテされなくなる予定です。&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;Enjoy!&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img id=&#34;meta-share&#34; src=&#34;/images/blog/v2.0.0/v2.png&#34; width=&#34;456&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
  </entry>
  <entry>
    <title>Ebiten v2 is coming</title>
    <id>https://ebiten.org/blog/v2_is_coming.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v2_is_coming.html"></link>
    <published>2020-10-10T00:00:00+09:00</published>
    <updated>2020-10-10T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1 lang=&#34;en&#34;&gt;Ebiten v2 is coming&lt;/h1&gt;&#xA;&lt;h1 lang=&#34;ja&#34;&gt;Ebiten v2 がやってくる&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-10-10&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;As we described in the &lt;a href=&#34;/blog/roadmap2020.html&#34;&gt;roadmap&lt;/a&gt;, we will release Ebiten v2 this month. v2 includes incompatible changes with v2 in the API, but the others are almost same as v1. For migration from v1 to v2, please see &lt;a href=&#34;/documents/to_v2.html&#34;&gt;Ebiten v2 migration guide&lt;/a&gt;. Basically we plan to add these quiet changes.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;&lt;a href=&#34;/blog/roadmap2020.html&#34;&gt;ロードマップ&lt;/a&gt;での目論見通り、今月中に v2 がリリースされます。 v2 は v1 の API とは互換性のない変更を含みますが、その他はほぼすべて同じです。v1 から v2 への移行については、 &lt;a href=&#34;/documents/to_v2.html&#34;&gt;Ebiten v2 移行ガイド&lt;/a&gt;を参照してください。基本的に次のような、おとなしめの変更がはいります。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Removing already-deprecated features (e.g., &lt;code&gt;Run&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;すでに廃止予定の機能を削除 (例: &lt;code&gt;Run&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Removing &#39;error&#39; returning values from some functions (e.g., &lt;code&gt;DrawImage&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;いくつかの関数から、戻り値のエラーを削除 (例: &lt;code&gt;DrawImage&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Adding new types to replace integers (e.g., &lt;code&gt;GamepadIDs&lt;/code&gt;s will return &lt;code&gt;[]GamepadID&lt;/code&gt; instead of &lt;code&gt;[]int&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;整数型に代わる新しい型を追加 (例: &lt;code&gt;GamepadIDs&lt;/code&gt; が &lt;code&gt;[]int&lt;/code&gt; の代わりに &lt;code&gt;[]GamepadID&lt;/code&gt; を返すようになる)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;Ebiten v2.0.0-rc.1 has already been released, and you can try that now.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;Ebiten v2.0.0-rc.1 はすでにリリース済みで、すぐに試すことができます。&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;Ebiten v2.0.0 will come at earliest in a week. Stay tuned!&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;Ebiten v2.0.0 は早くて一週間後リリース予定です。お楽しみに!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.12.0 is released</title>
    <id>https://ebiten.org/blog/v1.12.0.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.12.0.html"></link>
    <published>2020-10-01T00:00:00+09:00</published>
    <updated>2020-10-01T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1 lang=&#34;en&#34;&gt;v1.12.0 is released&lt;/h1&gt;&#xA;&lt;h1 lang=&#34;ja&#34;&gt;v1.12.0 がリリースされました&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-10-01&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;We are very happy to announce the release of v1.12.0 (&lt;a href=&#34;/documents/1.12.html&#34;&gt;Release Note&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;v1.12.0 がリリースされました! 詳しくは&lt;a href=&#34;/documents/1.12.html&#34;&gt;リリースノート&lt;/a&gt;を参照してください。&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;I appreciate all the contributors and &lt;a href=&#34;https://github.com/sponsors/hajimehoshi&#34;&gt;all the sponsors&lt;/a&gt;. Thank you very much!&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;すべてのコントリビューターと&lt;a href=&#34;https://github.com/sponsors/hajimehoshi&#34;&gt;スポンサーの皆様&lt;/a&gt;に感謝いたします。どうもありがとうございます!&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;The main new feature is &lt;a href=&#34;/documents/shader.html&#34;&gt;a custom shader with a new shading languge Kage&lt;/a&gt;. You can write a fragment shader in a Go-flavored language.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;主な新しい機能は、 &lt;a href=&#34;/documents/shader.html&#34;&gt;カスタムシェーダとシェーディング言語 Kage&lt;/a&gt; です。 Go 風味の言語でフラグメントシェーダを書くことができます。&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;// Uniform variables.&#xA;var Time float&#xA;var Cursor vec2&#xA;var ScreenSize vec2&#xA;&#xA;// Fragment is the entry point of the fragment shader.&#xA;// Fragment returns the color value for the current position.&#xA;func Fragment(position vec4, texCoord vec2, color vec4) vec4 {&#xA;&#x9;// You can define variables with a short variable declaration like Go.&#xA;&#x9;lightpos := vec3(Cursor, 50)&#xA;&#x9;lightdir := normalize(lightpos - position.xyz)&#xA;&#x9;normal := normalize(imageSrc1UnsafeAt(texCoord) - 0.5)&#xA;&#x9;ambient := 0.25&#xA;&#x9;diffuse := 0.75 * max(0.0, dot(normal.xyz, lightdir))&#xA;&#xA;&#x9;// You can treat multiple source images by&#xA;&#x9;// imageSrc[N]At or imageSrc[N]UnsafeAt.&#xA;&#x9;return imageSrc0UnsafeAt(texCoord) * (ambient + diffuse)&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;video controls autoplay src=&#34;/images/documents/shader/lighting.mp4&#34; width=&#34;456&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;Enjoy!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>Roadmap in 2020 and later</title>
    <id>https://ebiten.org/blog/roadmap2020.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/roadmap2020.html"></link>
    <published>2020-07-25T00:00:00+09:00</published>
    <updated>2020-07-25T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1 lang=&#34;en&#34;&gt;Roadmap in 2020 and later&lt;/h1&gt;&#xA;&lt;h1 lang=&#34;ja&#34;&gt;2020 年以降のロードマップ&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-07-25&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;This is the roadmap of Ebiten in 2020 and later. As this is just a plan, we might change this anytime.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;2020 年以降の Ebiten のロードマップです。あくまで予定なので、いつでも変更する可能性があります。&lt;/p&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Ebiten 1.12 - September, 2020&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;Ebiten 1.12 - 2020 年 9 月&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;The most significant new feature is a shader. This enables users to write custom shaders. To make shaders portable, we are developing a new Go-flavored shader language: Kage (影 - a shade in Japanese).&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;最も重要な新機能はシェーダーです。ユーザーはカスタムシェーダーを書けるようになります。シェーダーをポータブルにするために、新しい Go 風味のシェーダー言語、 Kage (影) を開発しています。&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;This is an example of a fragment shader in Kage:&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;Kage によるフラグメントシェーダーの例は次のようなものです:&lt;/p&gt;&#xA;    &lt;pre data-codesrc=&#34;/go/blog/roadmap2020/example.go&#34;&gt;&lt;/pre&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;This is compatible with Go syntax, and you can do go-fmt!&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;Go の文法と互換性があり、 go-fmt することもできます!&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;Now we are implementing more bulitin functions and necessary syntax items. Stay tuned.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;今は、組み込み関数を増やしたり、必要な文法要素を追加しているところです。お楽しみに!&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;Ebiten is released about one month after a new Go compiler is released. As Go compiler is regularly released in February and August every year, we release Ebiten in March and September every year, hopefully.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;Ebiten は Go コンパイラがリリースされてからおおよそ一ヶ月後にリリースされます。 Go コンパイラが定期的に毎年 2 月と 8 月にリリースされるので、 Ebiten は毎年 3 月と 9 月にリリースされる見込みです。&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/ebiten?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ebiten&lt;/a&gt; shader current progress: lighting! &lt;a href=&#34;https://twitter.com/hashtag/golang?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#golang&lt;/a&gt; &lt;a href=&#34;https://t.co/6hXEgmFcaI&#34;&gt;https://t.co/6hXEgmFcaI&lt;/a&gt; &lt;a href=&#34;https://t.co/NV8gJ9ge8S&#34;&gt;pic.twitter.com/NV8gJ9ge8S&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hajime Hoshi (星一) (@hajimehoshi) &lt;a href=&#34;https://twitter.com/hajimehoshi/status/1284741206744788992?ref_src=twsrc%5Etfw&#34;&gt;July 19, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Ebiten 2.0 - November, 2020&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;Ebiten 2.0 - 2020 年 10 月&lt;/h2&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;This will be the first update of the major version. We don&#39;t add drastic changes. Instead, we plan to add quiet changes to reduce the pain for Ebiten users to migrate as much as possible.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;最初のメジャーバージョンアップデートになります。過激な変更を入れるのではなく、代わりにおとなしめの変更を入れる予定です。 Ebiten ユーザーが移行する際の痛みを最小限に抑えるためです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Removing already-deprecated features (e.g., &lt;code&gt;Run&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;すでに廃止予定の機能を削除 (例: &lt;code&gt;Run&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Removing &#39;error&#39; returning values from some functions (e.g., &lt;code&gt;DrawImage&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;いくつかの関数から、戻り値のエラーを削除 (例: &lt;code&gt;DrawImage&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Adding new types to replace integers (e.g., &lt;code&gt;GamepadIDs&lt;/code&gt; will return &lt;code&gt;[]GamepadID&lt;/code&gt; instead of &lt;code&gt;[]int&lt;/code&gt;)&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;整数型に代わる新しい型を追加 (例: &lt;code&gt;GamepadIDs&lt;/code&gt; が &lt;code&gt;[]int&lt;/code&gt; の代わりに &lt;code&gt;[]GamepadID&lt;/code&gt; を返すようになる)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Ebiten 2.1 - March, 2021&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;Ebiten 2.1 - 2021 年 3 月&lt;/h2&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;We want to support Nintendo Switch. We have developed &lt;a href=&#34;https://github.com/hajimehoshi/go2cpp&#34;&gt;go2cpp&lt;a&gt;, a converter from Go to C++, and we plan to use this.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;Nintendo Switch をサポートしたいですね。 &lt;a href=&#34;https://github.com/hajimehoshi/go2cpp&#34;&gt;go2cpp&lt;a&gt; という Go から C++ へのコンバーターを開発したので、これを使う予定です。&lt;/p&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Ebiten 2.2 - Steptember, 2021&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;Ebiten 2.2 - 2021 年 9 月&lt;/h2&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;No plan yet. We might support vector graphics or DirectX.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;予定なし。ベクターグラフィックスや DirectX をサポートするかもしれません。&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>Breaking change to 1.12: rendering sub-images</title>
    <id>https://ebiten.org/blog/subimage.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/subimage.html"></link>
    <published>2020-06-28T00:00:00+09:00</published>
    <updated>2020-06-28T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1 lang=&#34;en&#34;&gt;Breaking change to 1.12: rendering sub-images&lt;/h1&gt;&#xA;&lt;h1 lang=&#34;ja&#34;&gt;1.12 に入る破壊的変更: サブ画像の描画&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-06-28&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;This artcile includes the information in June 2020. There&#39;s a possibility the plan will change.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;この記事は 2020 年 6 月現在の情報であり、予定を変更する可能性もあります。&lt;/p&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;TL;DR&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;要約&lt;/h2&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;Ebiten is adding a breaking change to 1.12 (the current master branch). Ebiten will no longer check the source-image region when rendering an image, and unexpected pixels might be rendered in some cases. This rendering result&#39;s difference might be seen when all the following conditions are satisfied:&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;Ebiten は 1.12 (現在の master ブランチ) から破壊的を導入する予定です。 Ebiten は、画像の描画の際、描画元領域のチェックをしないようになり、そのためいくつかのケースでは予期しないピクセルが描画されることがあります。この描画結果の違いは、以下の条件のすべてが満たされた場合に発生しえます:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;A sub-image (an image created by &lt;code&gt;SubImage&lt;/code&gt; function) is used&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;サブ画像 (&lt;code&gt;SubImage&lt;/code&gt; 関数で作られた画像) が使われる&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;The image is rendered with scaling or rotating&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;画像が拡大縮小または回転されて描画される&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;The adjacent areas&#39;s graphics are not continuous&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;隣接する領域の画像が連続していない&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;For example, rendering tiles on texture atlas with scaling or rotating might cause a different result from 1.11. The rendering result might include pixels in its adjacent area. On the other hand, for example, rendering 9-patches should not be problematic since the graphics are continuous.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;例えば、テクスチャアトラス上のタイルを拡大縮小や回転をさせて描画する場合、 1.11 とは違った結果になりえます。描画結果が隣接する領域のピクセルを含むかもしれません。一方例えば、 9-patch で描画するような場合は、画像が連続しているので問題にはなりません。&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;The next image is an example of a sub-image and the graphics that are not continuous on the right side.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;次の画像はサブ画像、および右側に連続しない画像を含む例です。&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;If necessary, you&#39;d need to create a texture atlas with paddings for each area.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;必要ならば、テクスチャアトラスの各領域にパディングを追加する必要があります。&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/subimage/subimage.png&#34; width=&#34;360&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;Ebiten has a feature called automatic texture atlases. Even if you create many &lt;code&gt;ebiten.Image&lt;/code&gt; objects, Ebiten tries to allocate them onto one texture atlas when possible. This is for an efficient rendering by reducing graphics commands sent to the GPU. Additionally, Ebiten users don&#39;t have to care about this. That&#39;s great!&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;Ebiten には自動テクスチャアトラスと呼ばれる機能があります。たとえ大量の &lt;code&gt;ebiten.Image&lt;/code&gt; を作ったとしても、 Ebiten はそれらを一つのテクスチャアトラス領域上に可能な限り確保しようとします。これによって GPU に送られるグラフィックス命令を減らすことができ、効果的な描画が実現できます。さらに、 Ebiten ユーザーはこのことを気にする必要がないのです。素晴らしい!&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/subimage/textureatlas.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;When Ebiten rendered a part of a texture atlas, Ebiten did a hack not to expose the pixels in the adjacent areas. Without the hack, such adjacent pixels can be exposed, especially when the image is rendered with rotating or scaling. This is a general issue of graphics programming. As the hack, Ebiten did two things:&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;Ebiten がテクスチャアトラスの一部を描画するとき、 Ebiten は隣接する領域のピクセルを露出させないために、あるハック (小細工) をしていました。このハックがないと、特に画像を回転または拡大縮小させて描画したときに、隣接するピクセルが露出してしまいます。これは一般的なゲームプログラミングの問題です。ハックとして、 Ebiten は次の 2 つのことをしていました:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Shift the texels a little bit.&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;テクセル (テクスチャの座標) をちょっとだけずらす&lt;/li&gt;&#xA;  &lt;li lang=&#34;en&#34;&gt;Check the source region in the shader.&lt;/li&gt;&#xA;  &lt;li lang=&#34;ja&#34;&gt;シェーダー内で描画元領域をチェックする&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;Both were problematic in terms of code maintainability, and the second hack was especially problematic. One reason is performance. This hack requires &#39;if&#39; branches in the shader programs and degrades the performance. Another thing is that this hack made it hard to define custom shaders, we are now introducing at 1.12. In the custom shaders, we wanted the users to take pixels from an image in an easy way, but we would need a special function for this purpose to perform this hack.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;両方ともコードのメンテナンス性の観点から問題でしたが、特に 2 つ目のハックが問題でした。一つの理由はパフォーマンスです。このハックのせいで if 分岐がシェーダーに追加されてしまい、パフォーマンスが落ちていました。もう一つの理由は、 1.12 に向けて導入中のカスタムシェーダーの定義が難しくなることです。カスタムシェーダー内で、画像からピクセルを取るときに簡単な方法で取れるのが望ましいのですが、このハックを実現するために特殊な関数などを用意しなければなりません。&lt;/p&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Removing the hacks&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;ハックの削除&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;We decided to remove these hacks. Instead, all the images are allocated onto the automatic texture atlas with 1px paddings. Even without the check of the source region, the outside pixels are transparent color and then this never violates the adjacent areas.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;我々はこれらのハックを削除することにしました。代わりに全ての自動テクスチャアトラス上の画像は 1px のパディング付きで確保されます。描画元領域のチェックがなくとも、外側のピクセルは透明であり、隣接する領域を侵害してしまうことは決してないのです。&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/subimage/textureatlas_with_paddings.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;However, Ebiten can treat sub-images, which are created by &lt;code&gt;(*ebiten.Image).SubImage&lt;/code&gt; function. They are parts of existing images. They cannot be allocated with paddings independently. There was an idea to allocate all the sub-images as independent images with paddings, but this was not good for performance and memory. If a user called &lt;code&gt;SubImage&lt;/code&gt; onto an image many times with 1px-shifted regions, each sub-image would be allocated.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;しかし、 Ebiten はサブ画像も取り扱えます。サブ画像は &lt;code&gt;(*ebiten.Image).SubImage&lt;/code&gt; 関数で作られた画像です。これらは既存の画像の一部です。サブ画像はパディング付きで独立して確保することができません。全てのサブ画像をパディング付きの独立した画像として確保する案もありましたが、これはパフォーマンスとメモリの観点から良くありませんでした。もしユーザーが画像上で &lt;code&gt;SubImage&lt;/code&gt; を 1px ずつずらした領域で大量に呼んだ場合、それぞれのサブ画像分領域が確保されてしまいます。&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/subimage/subimage_textureatlas.png&#34; width=&#34;456&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;Then, we gave up to support such paddings around sub-images. As a result, rendering a sub-image can cause different results compared to 1.11. The adjacent area&#39;s pixels can be rendered, especially when the image is rotated or scaled.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;よって、サブ画像についてはパディングを追加するのは諦めました。結果として、サブ画像の描画は 1.11 と比べると違った結果を引き起こすことがあります。特に、画像を回転または拡大縮小させた場合、隣接する領域のピクセルが描画されることがあります。&lt;/p&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;Example&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;例&lt;/h2&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;This is an example that causes bleeding edges by a scaled and rotated sub-image. You can see an unexpected green pixel on the right side. This rendering is tested on the latest master branch (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/tree/aee5d6d7084732e4d608ec72e9938e04ceddef5c&#34;&gt;aee5d6d7&lt;/a&gt;). The result depends on the machine&#39;s GPU.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;拡大と回転したサブ画像によって、隣接領域が見えてしまった描画の例です。右側に本来描画されるべきではない緑色のピクセルが描画されています。この描画は最新の master ブランチ (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/tree/aee5d6d7084732e4d608ec72e9938e04ceddef5c&#34;&gt;aee5d6d7&lt;/a&gt;) でテストされました。結果は GPU によって異なります。&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;pre data-codesrc=&#34;/go/blog/subimage/example.go&#34;&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/subimage/example.png&#34; width=&#34;320&#34;&gt;&lt;/p&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/subimage/example_enlarged.png&#34; width=&#34;276&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 lang=&#34;en&#34;&gt;What you should do&lt;/h2&gt;&#xA;&lt;h2 lang=&#34;ja&#34;&gt;あなたがすべきこと&lt;/h2&gt;&#xA;&lt;p lang=&#34;en&#34;&gt;If you have your own texture atlas, and the parts are rendered with scaling or rotating, and the parts&#39; graphics are not continuous, you need to add paddings for each part.&lt;/p&gt;&#xA;&lt;p lang=&#34;ja&#34;&gt;もし自作のテクスチャアトラスがあり、かつそれらの一部を拡大縮小または回転させて描画させ、かつそれらの画像が連続していない場合、パディングをそれぞれのパートに追加する必要があります。&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.11.0 is released</title>
    <id>https://ebiten.org/blog/v1.11.0.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.11.0.html"></link>
    <published>2020-04-13T00:00:00+09:00</published>
    <updated>2020-04-13T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1 lang=&#34;en&#34;&gt;v1.11.0 is released&lt;/h1&gt;&#xA;&lt;h1 lang=&#34;ja&#34;&gt;v1.11.0 がリリースされました&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-04-13&lt;/span&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;We are very happy to announce the release of v1.11.0 (&lt;a href=&#34;/documents/1.11.html&#34;&gt;Release Note&lt;/a&gt;). The new features are:&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;v1.11.0 がリリースされました! 詳しくは&lt;a href=&#34;/documents/1.11.html&#34;&gt;リリースノート&lt;/a&gt;を参照してください。新しい機能は次のとおりです:&lt;/p&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li lang=&#34;en&#34;&gt;&lt;code&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten?tab=doc#Game&#34;&gt;Game&lt;/a&gt;&lt;/code&gt; interface and &lt;code&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten?tab=doc#RunGame&#34;&gt;RunGame&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;&#xA;      &lt;li lang=&#34;ja&#34;&gt;&lt;code&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten?tab=doc#Game&#34;&gt;Game&lt;/a&gt;&lt;/code&gt; インターフェイスと &lt;code&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten?tab=doc#RunGame&#34;&gt;RunGame&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;&#xA;      &lt;li lang=&#34;en&#34;&gt;Resizable window&lt;/li&gt;&#xA;      &lt;li lang=&#34;ja&#34;&gt;サイズ可変ウィンドウ&lt;/li&gt;&#xA;      &lt;li lang=&#34;en&#34;&gt;Window position&lt;/li&gt;&#xA;      &lt;li lang=&#34;ja&#34;&gt;ウィンドウ位置&lt;/li&gt;&#xA;      &lt;li lang=&#34;en&#34;&gt;Transparent screen&lt;/li&gt;&#xA;      &lt;li lang=&#34;ja&#34;&gt;透過スクリーン&lt;/li&gt;&#xA;      &lt;li lang=&#34;en&#34;&gt;Floating window&lt;/li&gt;&#xA;      &lt;li lang=&#34;ja&#34;&gt;常時最前面ウィンドウ&lt;/li&gt;&#xA;      &lt;li lang=&#34;en&#34;&gt;Capturing cursor&lt;/li&gt;&#xA;      &lt;li lang=&#34;ja&#34;&gt;カーソルキャプチャ&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;You can develop a desktop mascot application with these API. See &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/tree/1.11/examples/mascot/main.go&#34;&gt;the mascot example&lt;/a&gt;.&lt;/p&gt;&#xA;    &lt;p lang=&#34;ja&#34;&gt;これら API を使って、デスクトップマスコットアプリケーションが作れます。 &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/tree/1.11/examples/mascot/main.go&#34;&gt;mascot サンプル&lt;/a&gt;を参考にしてください。&lt;/p&gt;&#xA;    &lt;p lang=&#34;en&#34;&gt;Enjoy!&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;video controls autoplay src=&#34;/images/documents/1.11/mascot.mp4&#34; width=&#34;400&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.10.5 is released</title>
    <id>https://ebiten.org/blog/v1.10.5.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.10.5.html"></link>
    <published>2020-03-12T00:00:00+09:00</published>
    <updated>2020-03-12T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;v1.10.5 is released&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-03-12&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;We are very happy to announce the release of &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.10.5&#34;&gt;v1.10.5&lt;/a&gt;. This includes only &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/milestone/37?closed=1&#34;&gt;bug fixes&lt;/a&gt; from v1.10.4.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;EbitenView class was not found in an Android library generated by &lt;code&gt;ebitenmobile&lt;/code&gt; on Windows (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/1096&#34;&gt;Issue #1096&lt;/a&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Enjoy!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.10.4 is released</title>
    <id>https://ebiten.org/blog/v1.10.4.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.10.4.html"></link>
    <published>2020-02-28T00:00:00+09:00</published>
    <updated>2020-02-28T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;v1.10.4 is released&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-02-28&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;We are very happy to announce the release of &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.10.4&#34;&gt;v1.10.4&lt;/a&gt;. This includes only &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/milestone/36?closed=1&#34;&gt;bug fixes&lt;/a&gt; from v1.10.3.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Calling &lt;code&gt;(*Image).Set&lt;/code&gt;, &lt;code&gt;(*Image).Fill&lt;/code&gt; and &lt;code&gt;(*Image).Set&lt;/code&gt; in this order before the main loop didn&#39;t work correctly (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/1081&#34;&gt;Issue #1081&lt;/a&gt;).&lt;/li&gt;&#xA;  &lt;li&gt;&lt;code&gt;ebitenutil.NewImageFromFile&lt;/code&gt; was not defined on Wasm (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/1087&#34;&gt;Issue #1087&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Enjoy!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.10.3 is released</title>
    <id>https://ebiten.org/blog/v1.10.3.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.10.3.html"></link>
    <published>2020-01-18T00:00:00+09:00</published>
    <updated>2020-01-18T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;v1.10.3 is released&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2020-01-18&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;We are very happy to announce the release of &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.10.3&#34;&gt;v1.10.3&lt;/a&gt;. This includes only bug fixes from v1.10.2.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code&gt;(*Image).Set&lt;/code&gt; is ignored before the main loop when &lt;code&gt;(*Image).DrawImage/DrawTriangles&lt;/code&gt; is called after &lt;code&gt;(*Image).Set&lt;/code&gt; (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/1052&#34;&gt;Issue #1052&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Enjoy!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.10.2 is released</title>
    <id>https://ebiten.org/blog/v1.10.2.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.10.2.html"></link>
    <published>2019-12-26T00:00:00+09:00</published>
    <updated>2019-12-26T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;v1.10.2 is released&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2019-12-26&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;We are very happy to announce the release of &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.10.2&#34;&gt;v1.10.2&lt;/a&gt;. This includes only bug fixes from v1.10.1.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Compile error with Go 1.14 (beta) for Wasm (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/1024&#34;&gt;Issue #1024&lt;/a&gt;)&lt;/li&gt;&#xA;  &lt;li&gt;Avoid unnecessary copying: this is a performance improvement rather than a bug fix, but this was needed to pass on the test bots. (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/983&#34;&gt;Issue #983&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Enjoy!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>New API to make a resizable window</title>
    <id>https://ebiten.org/blog/resizable.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/resizable.html"></link>
    <published>2019-12-23T00:00:00+09:00</published>
    <updated>2019-12-23T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;New API to make a resizable window&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2019-12-23&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2&gt;TL;DR&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;We have introduced these new APIs in the master branch:&lt;/p&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#Game&#34;&gt;&lt;code&gt;Game&lt;/code&gt; interface&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#RunGame&#34;&gt;&lt;code&gt;RunGame&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowResizable&#34;&gt;&lt;code&gt;SetWindowResizable&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#IsWindowResizable&#34;&gt;&lt;code&gt;IsWindowResizable&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowSize&#34;&gt;&lt;code&gt;SetWindowSize&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#WindowSize&#34;&gt;&lt;code&gt;WindowSize&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &lt;p&gt;You can create a resizable window by calling &lt;code&gt;SetWindowResizable(true)&lt;/code&gt;. You can specify how the screen size will be updated after resizing the window by &lt;code&gt;Game&lt;/code&gt;&#39;s &lt;code&gt;Layout&lt;/code&gt; function. The notion of the screen scale is deprecated, which means that you should not have to care about the screen scale.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p class=&#34;img&#34;&gt;&lt;video controls autoplay src=&#34;/images/blog/resizable/demo.mp4&#34; width=&#34;400&#34;&gt;&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;Background&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;There has been &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/320&#34;&gt;a request&lt;/a&gt; to have a resizable window by the user for a few years. While implementation is not difficult, we hesitated to introduce the API because there is no clear answer what is the best behavior. When a window size is changed by the user, should the game (logical) screen also be resized, or be the same but the scale should be updated? Both would make sense and be useful. There was no clear answer which is better.&lt;/p&gt;&#xA;    &lt;p&gt;Changing the window size is actually a new notion to Ebiten. Ebiten has &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetScreenSize&#34;&gt;&lt;code&gt;SetScreenSize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetScreenScale&#34;&gt;&lt;code&gt;SetScreenScale&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;SetScreenSize&lt;/code&gt; changes the logical screen size, and &lt;code&gt;SetScreenScale&lt;/code&gt; changes the scale without changing the logical size. Both change the window size as a side effect. Both work only with window mode on desktops, and not with fullscreen mode or browsers or mobiles. There is no API to change the window size directly so far.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;figure&gt;&#xA;      &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/resizable/which.png&#34; width=&#34;400&#34;&gt;&lt;/p&gt;&#xA;      &lt;figcaption&gt;When the window size is changed, should the game screen size be changed, or be just scaled?&lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;!--p&gt;In environments that don&#39;t have windows like browsers or mobiles, the scale is automatically adjusted with the outside size. The &#39;outside&#39; is a body element on borwsers, and the view-element size on mobiles. Can we extend this idea to the desktop windows?&lt;/p--&gt;&#xA;&lt;h2&gt;The new interface &lt;code&gt;Game&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;We have introduced a brand new interface &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#Game&#34;&gt;&lt;code&gt;Game&lt;/code&gt;&lt;/a&gt;, and a new function &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#RunGame&#34;&gt;&lt;code&gt;RunGame&lt;/code&gt;&lt;/a&gt; that takes a &lt;code&gt;Game&lt;/code&gt;, in the master branch.&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;pre data-codesrc=&#34;/go/blog/resizable/game.go&#34;&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;&lt;code&gt;Game&lt;/code&gt; has &lt;code&gt;Update&lt;/code&gt; function and &lt;code&gt;Layout&lt;/code&gt; function. &lt;code&gt;Update&lt;/code&gt; proceeds the game state. &lt;code&gt;Update&lt;/code&gt; is called every frame (per 1/60 [s] by default). This is the same as the function given to &lt;code&gt;Run&lt;/code&gt;. &lt;code&gt;Layout&lt;/code&gt; calculates the logical screen size based on the given outside size. The unit is device-independent pixels. The outside size is a window size on desktops (window mode). The scale is automatically adjusted based on the returned screen scale.&lt;/p&gt;&#xA;    &lt;p&gt;Actually the mobile environments already has &lt;a href=&#34;/documents/mobile.html&#34;&gt;the same interface&lt;/a&gt;.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;pre data-codesrc=&#34;/go/blog/resizable/rungame.go&#34;&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;&lt;code&gt;RunGame&lt;/code&gt; is a very similar function to &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#Run&#34;&gt;&lt;code&gt;Run&lt;/code&gt;&lt;/a&gt;, but takes a &lt;code&gt;Game&lt;/code&gt; instead of an updating function. &lt;code&gt;RunGame&lt;/code&gt; does not determine the window size, so you have to call &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowSize&#34;&gt;&lt;code&gt;SetWindowSize&lt;/code&gt;&lt;/a&gt; before &lt;code&gt;RunGame&lt;/code&gt; if necessary. Otherwise, a default window size is adopted. &lt;code&gt;RunGame&lt;/code&gt; also does not take a window title, so you have to call &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowTitle&#34;&gt;&lt;code&gt;SetWindowTitle&lt;/code&gt;&lt;/a&gt; instead.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h3&gt;&lt;code&gt;Layout&lt;/code&gt; function&lt;/h3&gt;&#xA;&lt;p&gt;Let&#39;s see how to implement &lt;code&gt;Layout&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;pre&gt;&lt;code&gt;func (g *Game) Layout(outsideWidth, outsideHeight int)&#xA;        (screenWidth, screenHeight int) {&#xA;    return outsideWidth, outsideHeight&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;If &lt;code&gt;Layout&lt;/code&gt; returns the outside size without changing them, the game screen size is adjusted to the outside size without changing the scale.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;pre&gt;&lt;code&gt;func (g *Game) Layout(outsideWidth, outsideHeight int)&#xA;        (screenWidth, screenHeight int) {&#xA;    return 320, 240&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;If &lt;code&gt;Layout&lt;/code&gt; returns ignores the outside size and returns a fixed size, the game screen size is not changed but the screen scale is adjusted instead.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;p&gt;&lt;code&gt;Layout&lt;/code&gt; implementation now can determine which way the game adopts. Besides, you can do more complex things by implementing your own logic!&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;figure&gt;&#xA;      &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/resizable/layout.png&#34; width=&#34;400&#34;&gt;&lt;/p&gt;&#xA;      &lt;figcaption&gt;&lt;code&gt;Layout&lt;/code&gt; implementation can determine which way the game adopts.&lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;Making a resizable window&lt;/h2&gt;&#xA;&lt;p&gt;To make a window resizable, call &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowResizable&#34;&gt;&lt;code&gt;SetWindowResizable&lt;/code&gt;&lt;/a&gt; function with &lt;code&gt;true&lt;/code&gt;. That&#39;s it! You can call it both before and after &lt;code&gt;RunGame&lt;/code&gt;. After &lt;code&gt;SetWindowResizable(true)&lt;/code&gt;, the player can resize the window by dragging. The user can even maximize the window.&lt;/p&gt;&#xA;&lt;p&gt;Note that &lt;code&gt;SetWindowResizable(true)&lt;/code&gt; does not work with &lt;code&gt;Run&lt;/code&gt;, but &lt;code&gt;RunGame&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowSize&#34;&gt;&lt;code&gt;SetWindowSize&lt;/code&gt;&lt;/a&gt; is an API to change the window size directly, and this has nothing to do with &lt;code&gt;SetWindowResizable&lt;/code&gt;. No matter what the window is resizable (by the user), &lt;code&gt;SetWindowSize&lt;/code&gt; works.&lt;/p&gt;&#xA;&lt;p&gt;To summarize, the new way to run the game will be in the next diagram. The new way is a little redundant compared to the current way, but the new way is more flexible for a resizable window.&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;  &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/resizable/compare.png&#34; width=&#34;700&#34;&gt;&lt;/p&gt;&#xA;  &lt;figcaption&gt;Comparison between the current way (&lt;code&gt;Run&lt;/code&gt;) and the new way (&lt;code&gt;RunGame&lt;/code&gt;).&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2&gt;Example&lt;/h2&gt;&#xA;&lt;p&gt;You can see actual examples in &lt;code&gt;examples/widowsize&lt;/code&gt;. A flag &lt;code&gt;-autoadjusting&lt;/code&gt; switches the &lt;code&gt;Layout&lt;/code&gt; function implementation.&lt;/p&gt;&#xA;&lt;h2&gt;Scale&lt;/h2&gt;&#xA;&lt;p&gt;After the &lt;code&gt;RunGame&lt;/code&gt; world, the notion of the screen scale is deprecated. You don&#39;t have to care how much the screen is scaled. With the new APIs, Ebiten&#39;s game screen is automatically scaled along with the outside world (a window on desktop for example). Actually, the game was automatically scaled on browsers and mobiles no matter what the specified screen scale was. The notion of scale will be incognitive from the developer.&lt;/p&gt;&#xA;&lt;h3&gt;Deprecated functions&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#ScreenScale&#34;&gt;&lt;code&gt;ScreenScale&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;s&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#ScreenSizeInFullscreen&#34;&gt;&lt;code&gt;ScreenSizeInFullscreen&lt;/code&gt;&lt;/a&gt;&lt;/s&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetScreenScale&#34;&gt;&lt;code&gt;SetScreenScale&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetScreenSize&#34;&gt;&lt;code&gt;SetScreenSize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;EDIT (2020-03-22): &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#ScreenSizeInFullscreen&#34;&gt;&lt;code&gt;ScreenSizeInFullscreen&lt;/code&gt;&lt;/a&gt; is now non-deprecated. This function is useful in limited use cases like developing a desktop mascot.&lt;/p&gt;&#xA;&lt;p&gt;These functions still work, but only with &lt;code&gt;Run&lt;/code&gt;. &lt;code&gt;SetScreenSize&lt;/code&gt; is deprecated since the new window size is calculated based on the current screen scale. Instead of this, you can use &lt;a href=&#34;https://pkg.go.dev/github.com/hajimehoshi/ebiten#SetWindowSize&#34;&gt;&lt;code&gt;SetWindowSize&lt;/code&gt;&lt;/a&gt; to change the window size directly. Of course, this works only on desktops.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Run&lt;/code&gt; is not deprecated yet, but we might deprecate this in the near future. &lt;code&gt;Run&lt;/code&gt; is still useful as a shorthand.&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>Ebiten in 2019</title>
    <id>https://ebiten.org/blog/2019.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/2019.html"></link>
    <published>2019-12-04T00:00:00+09:00</published>
    <updated>2019-12-04T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;Ebiten in 2019&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2019-12-04&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;It&#39;s been 6 years since I started to develop Ebiten. This article is a retrospective of Ebiten in 2019.&lt;/p&gt;&#xA;&lt;h2&gt;TL;DR&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;I&#39;m happy that a game in Ebiten (Bear&#39;s Restaurant) received some awards.&lt;/li&gt;&#xA;  &lt;li&gt;There are chances to contribute to Go, especially to a relatively minor tools like gomobile.&lt;/li&gt;&#xA;  &lt;li&gt;A game library will never be improved if there are no users. In 2019, we increased use cases of Ebiten and turn a feedback loop.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;January&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;I think I was working on Ebiten based on feedbacks by &#34;Bear&#39;s Restaurant&#34;&#39;s author.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;February&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&#34;&lt;a href=&#34;https://daigostudio.com/bearsrestaurant/&#34;&gt;Bear&#39;s Restaurant&lt;/a&gt;&#34; was released.&#xA;        &lt;ul&gt;&#xA;          &lt;li&gt;The author is &lt;a href=&#34;https://twitter.com/daigo&#34;&gt;Daigo&lt;/a&gt;.&lt;/li&gt;&#xA;          &lt;li&gt;This game is made with an in-house game engine written in Ebiten.&lt;/li&gt;&#xA;          &lt;li&gt;As far as I know, Bear&#39;s Restaurant has reached 400K downloads.&lt;/li&gt;&#xA;          &lt;li&gt;After releasing Bear&#39;s Restaurant, we needed to address many issues in mobile environments (e.g. &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/622&#34;&gt;there was an unexpected line on the screen in Xperia&lt;/a&gt;). I have fought against many bug reports this year.&lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://blog.golang.org/go1.12&#34;&gt;Go 1.12&lt;/a&gt; was released. This includes &lt;code&gt;&lt;a href=&#34;https://github.com/golang/go/issues/28434&#34;&gt;Syscall18&lt;/a&gt;&lt;/code&gt; I implemented. This was needed for OpenGL bindings on Windows.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;figure&gt;&#xA;      &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/2019/bearsrestaurant.png&#34;&gt;&lt;/p&gt;&#xA;      &lt;figcaption&gt;&lt;a href=&#34;https://daigostudio.com/bearsrestaurant/&#34;&gt;Bear’s Restaurant, Odencat Inc., 2019&lt;/a&gt;&lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;March&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Released &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.9.0&#34;&gt;Ebiten v1.9.0&lt;/a&gt;. The new features are no-Cgo on Windows, &lt;a href=&#34;https://developer.apple.com/metal/&#34;&gt;Metal&lt;/a&gt; on macOS, and so on.&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;For the Metal part, I used &lt;a href=&#34;https://dmitri.shuralyov.com/gpu/mtl&#34;&gt;Dmitri&#39;s source code&lt;/a&gt; with Dmitri&#39;s permission.&lt;/li&gt;&#xA;      &lt;li&gt;The reason why I implemented Metal version is because &lt;a href=&#34;https://developer.apple.com/documentation/macos_release_notes/macos_mojave_10_14_release_notes?language=objc&#34;&gt;Apple was trying to deprecate OpenGL&lt;/a&gt;.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;Started to implement &lt;a href=&#34;https://github.com/gopherjs/gopherjs/issues/887#issuecomment-468898721&#34;&gt;Go 1.12 port&lt;/a&gt; of GopherJS.&lt;/li&gt;&#xA;  &lt;li&gt;&lt;a href=&#34;https://twitter.com/hajimehoshi/status/1108703311887097856&#34;&gt;Launched ebiten.org&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;April&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;a href=&#34;https://twitter.com/neguse&#34;&gt;neguse&lt;/a&gt; developed a game &lt;a href=&#34;https://ldjam.com/events/ludum-dare/44/cutnalign&#34;&gt;cut’n’align&lt;/a&gt; in Ebiten (&lt;a href=&#34;https://www.neguse.dev/post/184550335311/ludum-dare-44%E3%81%ABsubmit%E3%81%97%E3%81%9F&#34;&gt;the article about this game in Japanese&lt;/a&gt;).&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;I improved the audio part of Ebiten based on neguse&#39;s feedbacks.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;May&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://daigostudio.com/fishingparadise&#34;&gt;Fishing Paradiso&lt;/a&gt; was released.&#xA;        &lt;ul&gt;&#xA;          &lt;li&gt;This game is made with the same engine Bear&#39;s Restaurant uses.&lt;/li&gt;&#xA;          &lt;li&gt;As far as I know, Fishing Paradiso has reached 480K downloads. This is the most downloaded mobile game in Go so far.&lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li&gt;Gave a presentation &lt;a href=&#34;https://docs.google.com/presentation/d/e/2PACX-1vROsKT1RYDNWLI0dPEjH8EbQTMlwHfSHcKAF-7qwZ8mkFTL5WvdxKgBZ4V35-UHTHVAJeZVRVFu2SkV/pub?start=false&amp;loop=false&amp;delayms=3000&amp;slide=id.p&#34;&gt;&#34;Mobile Game Development in Go&#34; (Japanese)&lt;/a&gt; at &lt;a href=&#34;https://golangtokyo.connpass.com/event/129067/&#34;&gt;golang.tokyo #24&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;figure&gt;&#xA;      &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/2019/fishingparadiso.png&#34;&gt;&lt;/p&gt;&#xA;      &lt;figcaption&gt;&lt;a href=&#34;https://daigostudio.com/fishingparadise/&#34;&gt;Fishing Paradiso, Odencat Inc., 2019&lt;/a&gt;&lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;June&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;Bear&#39;s Restaurant received Top3 award and Avex award at &lt;a href=&#34;https://indiegamesshowcase.withgoogle.com/intl/ja_jp/&#34;&gt;Google Play Indie Games Festival 2019&lt;/a&gt;. Congratulations!&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;この度くまレスがIndie Game FestivalでTop3+Avex賞受賞となりました。Googleおよび関係者の方々、素晴らしいコンテストを開いていただきありがとうございました。Googleのインディーゲームへの本気度と愛がつたわるいいイベントでした！&lt;a href=&#34;https://t.co/5HEJmOjy8Z&#34;&gt;https://t.co/5HEJmOjy8Z&lt;/a&gt;&lt;/p&gt;&amp;mdash; Daigo (@daigo) &lt;a href=&#34;https://twitter.com/daigo/status/1145124687019556865?ref_src=twsrc%5Etfw&#34;&gt;June 30, 2019&lt;/a&gt;&lt;/blockquote&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;July&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;Gave a LT &#34;&lt;a href=&#34;https://www.youtube.com/watch?v=zRgmXiO1el4&#34;&gt;Mobile Game Development in Go&lt;/a&gt;&#34; at &lt;a href=&#34;https://www.gophercon.com&#34;&gt;GopherCon 2019&lt;/a&gt;.&#xA;        &lt;ul&gt;&#xA;          &lt;li&gt;The summary is that &#34;you can develop decent mobile games in Go&#34;. &lt;/li&gt;&#xA;          &lt;li&gt;Ebiten was introduced also at &#34;&lt;a href=&#34;https://youtu.be/Dxs4LGjmEL4?t=1240&#34;&gt;Get Going with WebAssembly&lt;/a&gt;&#34; by Johan Brandhorst.&lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://odencat.com&#34;&gt;Odencat Inc.&lt;/a&gt; was established by Daigo. For now, this company’s focus is to sell games developed with Ebiten.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;und&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://t.co/GHT4O7HSjg&#34;&gt;https://t.co/GHT4O7HSjg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hajime Hoshi (星一) (@hajimehoshi) &lt;a href=&#34;https://twitter.com/hajimehoshi/status/1166358133092081665?ref_src=twsrc%5Etfw&#34;&gt;August 27, 2019&lt;/a&gt;&lt;/blockquote&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;August&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Started to implement &lt;a href=&#34;https://github.com/golang/go/issues/27234#issuecomment-518233673&#34;&gt;enabling Go modules in gomobile&lt;/a&gt;.&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;At GopherCon, I talked to the Go team members including &lt;a href=&#34;https://github.com/aclements&#34;&gt;Austin&lt;/a&gt; and was told: &#34;why don&#39;t you do that?&#34;&lt;/li&gt;&#xA;      &lt;li&gt;Ebiten is a heavy user of gomobile, and enabling Go modules is a critical feature. I run for a contributor.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;September&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;a href=&#34;https://blog.golang.org/go1.13&#34;&gt;Go 1.13&lt;/a&gt; was released.&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;This included &lt;a href=&#34;https://github.com/golang/go/issues/31980&#34;&gt;a breaking change in &lt;code&gt;syscall/js&lt;/code&gt;&lt;/a&gt;. Ebiten already supported this before releasing.&lt;/li&gt;&#xA;      &lt;li&gt;By the way, Go 1.14 plans to add &lt;a href=&#34;https://github.com/golang/go/issues/35111&#34;&gt;another breaking change&lt;/a&gt; (&lt;code&gt;==&lt;/code&gt; will not be available to compare &lt;code&gt;js.Value&lt;/code&gt;s). I plan to support this.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;October&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://opendiablo2.com&#34;&gt;OpenDiablo2&lt;/a&gt; adopted Ebiten.&#xA;        &lt;ul&gt;&#xA;          &lt;li&gt;Before adopting Ebiten, OpenDiablo2 used C# or other languages.&lt;/li&gt;&#xA;          &lt;li&gt;OpenDiablo2 is a project to reimplement Diablo2, and this uses resources of the official Diablo2 locally installed.&lt;/li&gt;&#xA;          &lt;li&gt;OpenDiablo2 utilizes Ebiten so heavily as never before and they found some performance issues in Ebiten. The author &lt;a href=&#34;https://github.com/essial&#34;&gt;Essial&lt;/a&gt; and I are discussing and trying to improve Ebiten&#39;s performance.&lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;      &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;figure&gt;&#xA;      &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/2019/opendiablo2.png&#34; width=&#34;400&#34;&gt;&lt;/p&gt;&#xA;      &lt;figcaption&gt;Screenshot on Hajime&#39;s local machine&lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;November&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;Released &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.10.0&#34;&gt;Ebiten v1.10.0&lt;/a&gt;. The new features are iOS Metal, &lt;code&gt;ebitenmobile&lt;/code&gt; command, and so on.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;December&lt;/h2&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a href=&#34;https://odencat.com/snowman&#34;&gt;Snowman Story&lt;/a&gt; is planned to be released.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item-2&#34;&gt;&#xA;    &lt;figure&gt;&#xA;      &lt;p class=&#34;img&#34;&gt;&lt;img src=&#34;/images/blog/2019/snowmanstory.png&#34;&gt;&lt;/p&gt;&#xA;      &lt;figcaption&gt;&lt;a href=&#34;https://odencat.com/snowman/&#34;&gt;Snowman Story, Odencat Inc., 2019&lt;/a&gt;&lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;After 2020&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;I hope supporting Go modules in gomobile would be finished.&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;Then I&#39;d be able to release Ebiten v2.0.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;For adding features, the highest priority things are what actual games want.&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;I&#39;ll continue to discuss with Daigo and the people in OpenDiablo2.&lt;/li&gt;&#xA;      &lt;li&gt;Shaders and vector graphics are still in the task queue.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;More examples and documents are needed to increase the users.&#xA;    &lt;ul&gt;What about offering easy-to-use assets and examples that use them?&lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;I&#39;d like to write a book if I have bandwidth.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</content>
  </entry>
  <entry>
    <title>v1.10.1 is released</title>
    <id>https://ebiten.org/blog/v1.10.1.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/v1.10.1.html"></link>
    <published>2019-11-24T00:00:00+09:00</published>
    <updated>2019-11-24T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;v1.10.1 is released&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2019-11-24&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;We are very happy to announce the release of &lt;a href=&#34;https://github.com/hajimehoshi/ebiten/releases/tag/v1.10.1&#34;&gt;v1.10.1&lt;/a&gt;. This includes only bug fixes from v1.10.0.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;  &lt;li&gt;&lt;code&gt;RepalcePixels&lt;/code&gt; might be very slow unexpectedly (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/977&#34;&gt;Issue #977&lt;/a&gt;).&lt;/li&gt;&#xA;  &lt;li&gt;CPU was busy when the window is in another workspace (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/982&#34;&gt;Issue #982&lt;/a&gt;).&lt;/li&gt;&#xA;  &lt;li&gt;Delayed sound on macOS / iOS (&lt;a href=&#34;https://github.com/hajimehoshi/ebiten/issues/975&#34;&gt;Issue #975&lt;/a&gt;).&lt;/li&gt;&#xA;  &lt;li&gt;etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Enjoy!&lt;/p&gt;&#xA;</content>
  </entry>
  <entry>
    <title>Hello!</title>
    <id>https://ebiten.org/blog/hello.html</id>
    <link rel="alternate" href="https://ebiten.org/blog/hello.html"></link>
    <published>2019-11-22T00:00:00+09:00</published>
    <updated>2019-11-22T00:00:00+09:00</updated>
    <author>
      <name>Hajime Hoshi</name>
      <uri>https://star.one</uri>
      <email>hajimehoshi@gmail.com</email>
    </author>
    <content type="html">&lt;h1&gt;Hello!&lt;/h1&gt;&#xA;&lt;p class=&#34;meta&#34;&gt;Hajime Hoshi&lt;br&gt;&lt;span id=&#34;meta-created&#34;&gt;2019-11-22&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hello! This is the very first article of the blog.&lt;/p&gt;&#xA;&lt;p&gt;I&#39;d like to share information about Ebiten e.g., new releases or new updates.&lt;/p&gt;&#xA;&lt;p&gt;I&#39;m now preparing an Atom feed. Stay tuned :-)&lt;/p&gt;&#xA;</content>
  </entry>
</feed>